#####################################################################
#  Fan Control
#####################################################################
##  Hotend Fan - XYE board, E1 Connector
[heater_fan hotend_fan]
pin: PA8
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 80
fan_speed: 0.7

##  Print Cooling Fan (24V Fan 4 wire)
##  Z board, X Endstop (PWM)
##  Z board, E1det (Tacho)
[fan]
pin: PE5
kick_start_time: 0.3
off_below: 0.10

##  Controller fan (5V Fan 4 wire)
##  Z board, NeoPixel Connector (PWM)
##  Z board, Y Endstop (Tacho)
[controller_fan my_controller_fan]
pin: PD12
max_power: 1.0
shutdown_speed: 1.0
cycle_time: 0.01
#hardware_pwm:
kick_start_time: 0.8
off_below: 0.3
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#   See the "fan" section for a description of the above parameters.
fan_speed: 0.7
idle_timeout: 30
idle_speed: 0
heater: heater_bed

##  Chamber temp / Exhaust fan (24V Fan 4 wire)
##  XYE board, NeoPixel Connector (PWM)
##  XYE board, TH1 Connector
##  XYE board, Z Endstop (Tacho)
[fan_generic chamber_fan]]
pin: PB10
shutdown_speed: 0
max_power: 1.0
kick_start_time: 0.5
off_below: 0.10

##  Nevermore Micro filter
##  - Z board, E1 Connector
# [fan_generic filter]
# pin: z:P2.4
# max_power: 1.0
# kick_start_time: 0.5
# off_below: 0.10

[temperature_sensor RPi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100
gcode_id: PI

##  Z board, TH1 Connector
[temperature_sensor endstop]
#   D8 on mcu_z
sensor_type: ATC Semitec 104GT-2
sensor_pin: PF5
min_temp: 0
max_temp: 80
gcode_id: Z

## dummy output to get an switch in Mainsail
## any unused mcu pin can be defined you will not connect anything
## as I use the rPi as mcu I will use a pin from it
## Off -> M106 will update fan
## On -> M106 can not uodate fan
[output_pin lock_M106]
pin: rpi: gpio16
value:0

#####################################################################
#  Macros
#####################################################################
# M106 with lock and manual set feature
# M106 S128 M1 will update the fan in any case
[gcode_macro M106]
description: set fan with manual override and lock option
rename_existing: M106.1
gcode:
  {% if printer['output_pin lock_M106'].value|int == 0 or params.M|default(0) == '1' %}
    M106.1 {rawparams}
  {% else %}
    {action_respond_info("M106 update is locked")}
  {% endif %}
  
[gcode_macro M141]
description: Set temperature of chamber fan
gcode:
  SET_TEMPERATURE_FAN_TARGET temperature_fan=chamber target={params.S|default(0)}
    
[gcode_macro _SET_FILTER]
description: Helper: Set Nevermore filter speed
gcode:
  SET_FAN_SPEED FAN=filter SPEED={params.S|default(0)}

##  Filter On
[gcode_macro _FILTER_ON]
description: Helper: Nevermore on
gcode:
  _SET_FILTER S={printer['gcode_macro _USER_VARIABLE'].peripheral.filter.on_val}
  
##  Filter Fan Control in Mainsail
[gcode_macro FILTER]
description: Toggle Nevermore fan
gcode:
  {% if printer['fan_generic filter'].speed|float > 0.0 %} _SET_FILTER {% else %} _FILTER_ON {% endif %}
  _FILTER_INFO

[delayed_gcode _DELAY_FILTER_OFF]
gcode:
  {% if printer.print_stats.state|lower != "paused" and printer.print_stats.state|lower != "printing" %}
    _SET_FILTER
    _FILTER_INFO
  {% endif %}

##  Chamber Ventilation Control in Mainsail
[gcode_macro VENT]
description: Toggle Chamber fan
gcode:
    {% if printer['temperature_fan chamber'].target|float > 0 and 
          printer['temperature_fan chamber'].target|float <= printer['gcode_macro _USER_VARIABLE'].peripheral.vent.on_val|float %}
        M141
    {% else %}
        M141 S{printer['gcode_macro _USER_VARIABLE'].peripheral.vent.on_val}
    {% endif %}
    _VENT_INFO

[delayed_gcode _DELAY_VENT_OFF]
gcode:
  {% if printer.print_stats.state|lower != "paused" and printer.print_stats.state|lower != "printing" %}
    M141
    _VENT_INFO
  {% endif %}

[gcode_macro _VENT_INFO]
description: Helper: Print chamber fan temperature
gcode:
  {% if printer['temperature_fan chamber'].target|int == 0 %}
    {action_respond_info("Chamber fan off")}
  {% else %}
    {action_respond_info("Chamber fan target temp: %2dC" % (printer['temperature_fan chamber'].target))}
  {% endif %}
    
[gcode_macro _FILTER_INFO]
description: Helper: Print Nevermore speed
gcode:
  {% set state='on' if printer['fan_generic filter'].speed|float > 0.0 else 'off' %}
  {action_respond_info("Filter Fan %s" % (state))}
  
# #####################################################################
# #  Display Menu definition                                          #
# #####################################################################
# ##  Disable stock config
# [menu __main __control __fanonoff]
# type: disabled

# [menu __main __control __fanspeed]
# type: disabled

# ## Add menu for fan, chamber and filter
# [menu __main __control __fan]
# type: list
# name: Fan 
# index: 5

# [menu __main __control __fan __partcooling]
# type: list
# enable: {'fan' in printer}
# name: Fan {'%3d' % (printer.fan.speed*100)}%

# [menu __main __control __fan __chamber]
# type: list
# enable: {'temperature_fan chamber' in printer}
# name: Chamber {'%2dC' % (printer['temperature_fan chamber'].target) if printer['temperature_fan chamber'].target else 'OFF'}

# [menu __main __control __fan __filter]
# type: list
# enable: {'fan_generic filter' in printer}
# name: Filter {'%3d' % (printer['fan_generic filter'].speed*100)}%

# [menu __main __control __fan __partcooling __fanonoff]
# type: input
# name: Toggle: {'ON' if menu.input else 'OFF'}
# input: {printer.fan.speed}
# input_min: 0
# input_max: 1
# input_step: 1
# gcode:
#   M106 S{255 if menu.input else 0}

# [menu __main __control __fan __partcooling __fanspeed]
# type: input
# name: Speed: {'%3d' % (menu.input*100)}%
# input: {printer.fan.speed}
# input_min: 0
# input_max: 1
# input_step: 0.01
# gcode:
#   M106 S{'%d' % (menu.input*255)}

# [menu __main __control __fan __chamber __chamberonoff]
# type: input
# name: Toggle: {'ON' if menu.input else 'OFF'}
# input: {printer['temperature_fan chamber'].target}
# input_min: 0
# input_max: 1
# input_step: 1
# gcode:
#   {% set temp_on = printer["gcode_macro _USER_VARIABLE"].vent_on|int %}
#   M141 S{temp_on if menu.input else 0}    
    
# [menu __main __control __fan __chamber __chamberfanspeed]
# type: input
# name: Temp: {'%2dC' % (menu.input) if menu.input else 'OFF'}
# input: {printer['temperature_fan chamber'].target}
# input_min: {printer.configfile.settings['temperature_fan chamber'].min_temp|int}
# input_max: {printer.configfile.settings['temperature_fan chamber'].max_temp|int}
# input_step: 1
# gcode:
#     M141 S{'%d' % (menu.input)}

# [menu __main __control __fan __filter __filteronoff]
# type: input
# name: Toggle: {'ON ' if menu.input else 'OFF'}
# input: {printer['fan_generic filter'].speed}
# input_min: 0
# input_max: 1
# input_step: 1
# gcode:
#  {% if menu.input %}
#    _FILTER_ON
#  {% else %}
#    _SET_FILTER S=0.0
#  {% endif %}

# [menu __main __control __fan __filter __filterspeed]
# type: input
# name: Speed: {'%3d' % (menu.input*100)}%
# input: {printer['fan_generic filter'].speed}
# input_min: 0
# input_max: 1
# input_step: 0.01
# gcode:
#     _SET_FILTER S={menu.input}